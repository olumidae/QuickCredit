{"version":3,"sources":["../../server/models/repaymentModel.js"],"names":["Repayments","repayments","info","res","newRepay","id","length","createdOn","format","loanId","parseInt","amount","parseFloat","loan","loanModel","loans","find","l","push"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;;;;;IAEMA,U;AACJ,wBAAc;AAAA;;AACZ,SAAKC,UAAL,GAAkB,EAAlB;AACD;;;;8BAESC,I,EAAMC,G,EAAK;AACnB,UAAMC,WAAW;AACfC,YAAI,KAAKJ,UAAL,CAAgBK,MAAhB,GAAyB,CADd;AAEfC,mBAAW,wBAASC,MAAT,CAAgB,IAAhB,CAFI;AAGfC,gBAAQC,SAASR,KAAKO,MAAd,CAHO;AAIfE,gBAAQC,WAAWV,KAAKS,MAAhB;;AAJO,OAAjB;;AAQA,UAAME,OAAOC,oBAAUC,KAAV,CAAgBC,IAAhB,CAAqB;AAAA,eAAKC,EAAEZ,EAAF,KAASH,KAAKO,MAAnB;AAAA,OAArB,CAAb;;AAEA;AACA;;AAEA,WAAKR,UAAL,CAAgBiB,IAAhB,CAAqBd,QAArB;AACA,aAAOA,QAAP;AACD;;;;;;kBAGY,IAAIJ,UAAJ,E","file":"repaymentModel.js","sourcesContent":["import moment from 'moment';\r\nimport loanModel from './loanModel';\r\n\r\nclass Repayments {\r\n  constructor() {\r\n    this.repayments = [];\r\n  }\r\n\r\n  repayLoan(info, res) {\r\n    const newRepay = {\r\n      id: this.repayments.length + 1,\r\n      createdOn: moment().format('LL'),\r\n      loanId: parseInt(info.loanId),\r\n      amount: parseFloat(info.amount),\r\n\r\n    };\r\n\r\n    const loan = loanModel.loans.find(l => l.id === info.loanId);\r\n\r\n    // if (loan.balance < info.amount) return res.status(404).json({ status: 404, error: `Error! the repay amount is greater than the loan balance:  ${loan.balance}` });\r\n    // loan.balance = parseFloat(loan.balance) - parseFloat(info.amount);\r\n\r\n    this.repayments.push(newRepay);\r\n    return newRepay;\r\n  }\r\n}\r\n\r\nexport default new Repayments();\r\n"]}