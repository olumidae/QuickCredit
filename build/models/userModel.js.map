{"version":3,"sources":["../../server/models/userModel.js"],"names":["UserData","info","newUser","id","length","firstName","lastName","email","password","bcrypt","hashSync","address","status","isAdmin","isLoggedIn","push"],"mappings":";;;;;;;;AAAA;;;;;;;;IAEMA,Q;AACJ,sBAAc;AAAA;;AACZ,SAAKA,QAAL,GAAgB,EAAhB;AACD;;;;2BAEMC,I,EAAM;AACX,UAAMC,UAAU;AACdC,YAAI,KAAKH,QAAL,CAAcI,MAAd,GAAuB,CADb;AAEdC,mBAAWJ,KAAKI,SAFF;AAGdC,kBAAUL,KAAKK,QAHD;AAIdC,eAAON,KAAKM,KAJE;AAKdC,kBAAUC,iBAAOC,QAAP,CAAgBT,KAAKO,QAArB,EAA+B,CAA/B,CALI;AAMdG,iBAASV,KAAKU,OANA;AAOdC,gBAAQ,YAPM;AAQdC,iBAASZ,KAAKY,OARA;AASdC,oBAAY;AATE,OAAhB;AAWA,WAAKd,QAAL,CAAce,IAAd,CAAmBb,OAAnB;AACA,aAAOA,OAAP;AACD;;;;;;kBAGY,IAAIF,QAAJ,E","file":"userModel.js","sourcesContent":["import bcrypt from 'bcrypt';\r\n\r\nclass UserData {\r\n  constructor() {\r\n    this.UserData = [];\r\n  }\r\n\r\n  signUp(info) {\r\n    const newUser = {\r\n      id: this.UserData.length + 1,\r\n      firstName: info.firstName,\r\n      lastName: info.lastName,\r\n      email: info.email,\r\n      password: bcrypt.hashSync(info.password, 5),\r\n      address: info.address,\r\n      status: 'unverified',\r\n      isAdmin: info.isAdmin,\r\n      isLoggedIn: 'false',\r\n    };\r\n    this.UserData.push(newUser);\r\n    return newUser;\r\n  }\r\n}\r\n\r\nexport default new UserData();\r\n"]}