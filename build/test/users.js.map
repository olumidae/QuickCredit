{"version":3,"sources":["../../server/test/users.js"],"names":["expect","chai","use","chaiHttp","describe","it","done","request","app","post","send","firstName","lastName","email","address","password","isAdmin","end","err","res","body","status","to","equal","have","property","be","an","set"],"mappings":"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","file":"users.js","sourcesContent":["/* eslint-disable no-undef */\r\nimport chai from 'chai';\r\nimport chaiHttp from 'chai-http';\r\nimport app from '../../app';\r\n\r\nconst { expect } = chai;\r\nchai.use(chaiHttp);\r\n\r\n\r\ndescribe('Register new user', () => {\r\n  it('Lets new user register', (done) => {\r\n    chai.request(app)\r\n      .post('/api/v1/auth/signup')\r\n      .send({\r\n        firstName: 'olumide',\r\n        lastName: 'omitiran',\r\n        email: 'oomitiran@gmail.com',\r\n        address: 'lagos',\r\n        password: '12345678',\r\n        isAdmin: 'true',\r\n      })\r\n      .end((err, res) => {\r\n        // console.log(res.body)\r\n        expect(res.body.status).to.equal(201);\r\n        expect(res.body).to.have.property('status');\r\n        expect(res.body).to.have.property('message');\r\n        expect(res.body).to.have.property('data');\r\n        expect(res.body).to.be.an('object');\r\n        done();\r\n      });\r\n  });\r\n\r\n  it('isAdmin property should be a boolean', (done) => {\r\n    chai.request(app)\r\n      .post('/api/v1/auth/signup')\r\n      .send({\r\n\r\n        isAdmin: 'admin',\r\n      })\r\n      .end((err, res) => {\r\n        expect(res.body.status).to.equal(400);\r\n        expect(res.body).to.have.property('status');\r\n        expect(res.body).to.have.property('error');\r\n        expect(res.body).to.be.an('object');\r\n        done();\r\n      });\r\n  });\r\n\r\n  it('All input fields are required', (done) => {\r\n    chai.request(app)\r\n      .post('/api/v1/auth/signup')\r\n      .send({\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        address: '',\r\n        password: '',\r\n      })\r\n      .end((err, res) => {\r\n        expect(res.body.status).to.equal(400);\r\n        expect(res.body).to.have.property('status');\r\n        expect(res.body).to.have.property('error');\r\n        expect(res.body).to.be.an('object');\r\n        done();\r\n      });\r\n  });\r\n\r\n  it('Checks if email exists', (done) => {\r\n    chai.request(app)\r\n      .post('/api/v1/auth/signup')\r\n      .set('Content-type', 'application/json')\r\n      .set('Accept', 'application/json')\r\n      .send({\r\n        firstName: 'Eden',\r\n        lastName: 'Hazard',\r\n        email: 'ehazard@gmail.com',\r\n        password: 'ehazard10',\r\n      })\r\n      .end((err, res) => {\r\n        expect(res.body.status).to.equal(400);\r\n        expect(res.body).to.have.property('status');\r\n        expect(res.body).to.have.property('error');\r\n        expect(res.body).to.be.an('object');\r\n        done();\r\n      });\r\n  });\r\n});\r\n\r\n\r\n// describe('Login', () => {\r\n//   it('Lets new and existing users login', (done) => {\r\n//     chai.request(app)\r\n//       .post('/api/v1/auth/logIn')\r\n//       .send({\r\n//         email: 'oomitiran@gmail.com',\r\n//         password: 'supersecret',\r\n//       })\r\n//       .end((err, res) => {\r\n//         expect(res.body.status).to.equal(200);\r\n//         expect(res.body).to.have.property('status');\r\n//         expect(res.body).to.have.property('message');\r\n//         expect(res.body).to.have.property('data');\r\n//         expect(res.body).to.be.an('object');\r\n//         done();\r\n//       });\r\n//   });\r\n\r\n//   it('All fields are required', (done) => {\r\n//     chai.request(app)\r\n//       .post('/api/v1/auth/logIn')\r\n//       .send({\r\n//         email: '',\r\n//         password: '',\r\n//       })\r\n//       .end((err, res) => {\r\n//         expect(res.body.status).to.equal(400);\r\n//         expect(res.body).to.have.property('status');\r\n//         expect(res.body).to.have.property('error');\r\n//         expect(res.body).to.be.an('object');\r\n//         done();\r\n//       });\r\n//   });\r\n\r\n\r\n//   it('Incorrect Password', (done) => {\r\n//     chai.request(app)\r\n//       .post('/api/v1/auth/logIn')\r\n//       .send({\r\n//         email: 'oomitiran@gmail.com',\r\n//         password: 'secret',\r\n//       })\r\n//       .end((err, res) => {\r\n//         expect(res.body.status).to.equal(400);\r\n//         expect(res.body).to.have.property('status');\r\n//         expect(res.body).to.have.property('error');\r\n//         expect(res.body).to.be.an('object');\r\n//         done();\r\n//       });\r\n//   });\r\n// });\r\n\r\n"]}