{"version":3,"sources":["../../server/utils/authenticateLoan.js"],"names":["applyValidator","loan","applyFormat","firstName","jo","string","required","lastName","address","email","tenor","number","max","amount","status","valid","repaid","boolean","interest","paymentInstallment","balance","validate","approveValidator","approveFormat","approvedBy"],"mappings":";;;;;;AAAA;;;;;;AAGA,IAAMA,iBAAiB,SAAjBA,cAAiB,CAACC,IAAD,EAAU;AAC/B,MAAMC,cAAc;AAClBC,eAAWC,cAAGC,MAAH,GAAYC,QAAZ,EADO;AAElBC,cAAUH,cAAGC,MAAH,GAAYC,QAAZ,EAFQ;AAGlBE,aAASJ,cAAGC,MAAH,GAAYC,QAAZ,EAHS;AAIlBG,WAAOL,cAAGC,MAAH,GAAYI,KAAZ,GAAoBH,QAApB,EAJW,EAIqB;AACvCI,WAAON,cAAGO,MAAH,GAAYC,GAAZ,CAAgB,EAAhB,EAAoBN,QAApB,EALW;AAMlBO,YAAQT,cAAGO,MAAH,GAAYL,QAAZ,EANU;AAOlBQ,YAAQV,cAAGC,MAAH,GAAYU,KAAZ,CAAkB,SAAlB,EAA6B,UAA7B,EAAyC,UAAzC,CAPU;AAQlBC,YAAQZ,cAAGa,OAAH,GAAaF,KAAb,CAAmB,MAAnB,EAA2B,OAA3B,CARU;AASlBG,cAAUd,cAAGO,MAAH,EATQ;AAUlBQ,wBAAoBf,cAAGO,MAAH,EAVF;AAWlBS,aAAShB,cAAGO,MAAH;AAXS,GAApB;AAaA,SAAOP,cAAGiB,QAAH,CAAYpB,IAAZ,EAAkBC,WAAlB,CAAP;AACD,CAfD;;AAiBA,IAAMoB,mBAAmB,SAAnBA,gBAAmB,CAACrB,IAAD,EAAU;AACjC,MAAMsB,gBAAgB;AACpBT,YAAQV,cAAGC,MAAH,GAAYU,KAAZ,CAAkB,SAAlB,EAA6B,UAA7B,EAAyC,UAAzC,EAAqDT,QAArD,EADY;AAEpBkB,gBAAYpB,cAAGC,MAAH;AAFQ,GAAtB;AAIA,SAAOD,cAAGiB,QAAH,CAAYpB,IAAZ,EAAkBsB,aAAlB,CAAP;AACD,CAND;;kBAQe;AACbvB,gCADa;AAEbsB;AAFa,C","file":"authenticateLoan.js","sourcesContent":["import jo from 'joi';\r\n\r\n\r\nconst applyValidator = (loan) => {\r\n  const applyFormat = {\r\n    firstName: jo.string().required(),\r\n    lastName: jo.string().required(),\r\n    address: jo.string().required(),\r\n    email: jo.string().email().required(), /** .regex(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/).required(), */\r\n    tenor: jo.number().max(12).required(),\r\n    amount: jo.number().required(),\r\n    status: jo.string().valid('pending', 'approved', 'rejected'),\r\n    repaid: jo.boolean().valid('true', 'false'),\r\n    interest: jo.number(),\r\n    paymentInstallment: jo.number(),\r\n    balance: jo.number(),\r\n  };\r\n  return jo.validate(loan, applyFormat);\r\n};\r\n\r\nconst approveValidator = (loan) => {\r\n  const approveFormat = {\r\n    status: jo.string().valid('pending', 'approved', 'rejected').required(),\r\n    approvedBy: jo.string(),\r\n  };\r\n  return jo.validate(loan, approveFormat);\r\n};\r\n\r\nexport default {\r\n  applyValidator,\r\n  approveValidator,\r\n};\r\n"]}