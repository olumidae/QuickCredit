{"version":3,"sources":["../../server/utils/authenticateUser.js"],"names":["UserLoginValidator","user","loginformat","jo","object","keys","email","string","password","min","required","with","validate","signupValidator","signupFormat","firstName","trim","lastName","regex","address","status","valid","isAdmin","boolean","isLoggedIn","verifyUserValidator","updateFormat","verifiedBy"],"mappings":";;;;;;AAAA;;;;;;AAEA,IAAMA,qBAAqB,SAArBA,kBAAqB,CAACC,IAAD,EAAU;AACnC,MAAMC,cAAcC,cAAGC,MAAH,GAAYC,IAAZ,CAAiB;AACnCC,WAAOH,cAAGI,MAAH,GAAYD,KAAZ,EAD4B;AAEnCE,cAAUL,cAAGI,MAAH,GAAYE,GAAZ,CAAgB,CAAhB,EAAmBC,QAAnB;AAFyB,GAAjB,EAGjBC,IAHiB,CAGZ,OAHY,EAGH,UAHG,CAApB;AAIA,SAAOR,cAAGS,QAAH,CAAYX,IAAZ,EAAkBC,WAAlB,CAAP;AACD,CAND;;AAQA,IAAMW,kBAAkB,SAAlBA,eAAkB,CAACZ,IAAD,EAAU;AAChC,MAAMa,eAAe;AACnBC,eAAWZ,cAAGI,MAAH,GAAYE,GAAZ,CAAgB,CAAhB,EAAmBO,IAAnB,GAA0BN,QAA1B,EADQ;AAEnBO,cAAUd,cAAGI,MAAH,GAAYE,GAAZ,CAAgB,CAAhB,EAAmBC,QAAnB,EAFS;AAGnBJ,WAAOH,cAAGI,MAAH,GAAYD,KAAZ,GAAoBI,QAApB,EAHY;AAInBF,cAAUL,cAAGI,MAAH,GAAYW,KAAZ,CAAkB,oBAAlB,EAAwCT,GAAxC,CAA4C,CAA5C,EAA+CC,QAA/C,EAJS;AAKnBS,aAAShB,cAAGI,MAAH,GAAYE,GAAZ,CAAgB,CAAhB,CALU;AAMnBW,YAAQjB,cAAGI,MAAH,GAAYc,KAAZ,CAAkB,UAAlB,EAA8B,YAA9B,CANW;AAOnBC,aAASnB,cAAGoB,OAAH,GAAaF,KAAb,CAAmB,MAAnB,EAA2B,OAA3B,CAPU;AAQnBG,gBAAYrB,cAAGoB,OAAH,GAAaF,KAAb,CAAmB,MAAnB,EAA2B,OAA3B;AARO,GAArB;AAUA,SAAOlB,cAAGS,QAAH,CAAYX,IAAZ,EAAkBa,YAAlB,CAAP;AACD,CAZD;;AAcA,IAAMW,sBAAsB,SAAtBA,mBAAsB,CAACxB,IAAD,EAAU;AACpC,MAAMyB,eAAe;AACnBN,YAAQjB,cAAGI,MAAH,GAAYc,KAAZ,CAAkB,UAAlB,EAA8B,YAA9B,EAA4CX,QAA5C,EADW;AAEnBiB,gBAAYxB,cAAGI,MAAH;;AAFO,GAArB;AAKA,SAAOJ,cAAGS,QAAH,CAAYX,IAAZ,EAAkByB,YAAlB,CAAP;AACD,CAPD;;kBASe;AACbD,0CADa;AAEbZ,kCAFa;AAGbb;AAHa,C","file":"authenticateUser.js","sourcesContent":["import jo from 'joi';\n\nconst UserLoginValidator = (user) => {\n  const loginformat = jo.object().keys({\n    email: jo.string().email(),\n    password: jo.string().min(6).required(),\n  }).with('email', 'password');\n  return jo.validate(user, loginformat);\n};\n\nconst signupValidator = (user) => {\n  const signupFormat = {\n    firstName: jo.string().min(3).trim().required(),\n    lastName: jo.string().min(3).required(),\n    email: jo.string().email().required(),\n    password: jo.string().regex(/^[a-zA-Z0-9]{4,8}$/).min(4).required(),\n    address: jo.string().min(3),\n    status: jo.string().valid('verified', 'unverified'),\n    isAdmin: jo.boolean().valid('true', 'false'),\n    isLoggedIn: jo.boolean().valid('true', 'false'),\n  };\n  return jo.validate(user, signupFormat);\n};\n\nconst verifyUserValidator = (user) => {\n  const updateFormat = {\n    status: jo.string().valid('verified', 'unverified').required(),\n    verifiedBy: jo.string(),\n\n  };\n  return jo.validate(user, updateFormat);\n};\n\nexport default {\n  verifyUserValidator,\n  signupValidator,\n  UserLoginValidator,\n};\n"]}